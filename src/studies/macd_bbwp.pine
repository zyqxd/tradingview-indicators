//@version=5
//Â© zyqxd

indicator(title="BBWP MACD", shorttitle="BBWP+MACD")

// --- Inputs

i_fast_ma        = input.int    (21,    title = "Fast MA",          group="MA")
i_slow_ma        = input.int    (55,    title = "Slow MA",          group="MA")
i_signal_ma      = input.int    (9,     title = "Signal MA",        group="MA", minval = 1, maxval = 50)
i_ma_type        = input.string ("EMA", title = "MA Type",          group="MA", options = ["SMA", "EMA"])

i_bbwp_len       = input.int    (55,    title = 'BBWP Length',      group = 'BBWP')
i_bbwp_lookback  = input.int    (252,   title = 'BBWP Lookback',    group = 'BBWP')

col_grow_above = input(#26A69A, "Above Grow", group="Histogram", inline="Above")
col_fall_above = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below = input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
col_fall_below = input(#FF5252, "Fall", group="Histogram", inline="Below")


// --- Functions
f_bbwp ( bbwp_len, bbwp_lookback ) =>
    float basis = ta.sma(close, bbwp_len)
    float dev = ta.stdev(close, bbwp_len)
    _bbw = (( basis + 2 * dev ) - ( basis - 2 * dev )) / basis
    _bbwSum = 0
    for i = 1 to bbwp_lookback
        _bbwSum := _bbwSum + ( _bbw [i] > _bbw ? 0 : 1 )
    ( _bbwSum / bbwp_lookback ) * 100

// --- Calculating
fast_ma = i_ma_type == "SMA" ? ta.sma(close, i_fast_ma) : ta.ema(close, i_fast_ma)
slow_ma = i_ma_type == "SMA" ? ta.sma(close, i_slow_ma) : ta.ema(close, i_slow_ma)
macd    = fast_ma - slow_ma

signal  = i_ma_type == "SMA" ? ta.sma(macd, i_signal_ma) : ta.ema(macd, i_signal_ma)
bbwp    = f_bbwp(i_bbwp_len, i_bbwp_lookback)
hist    = macd - signal
hist_c  = (hist >= 0 ?
             (hist[1] < hist ? col_grow_above : col_fall_above) :
             (hist[1] < hist ? col_grow_below : col_fall_below))


// --- Plots
hline (0,    title = "Zero Line", color=color.new(#787B86, 50))
plot  (hist, title = "Histogram", color=hist_c, style=plot.style_columns)
plot  (bbwp, title = "BBWP",      color=color.white, linewidth=2)

// plot(macd, title="MACD", color=col_macd)
// plot(signal, title="Signal", color=col_signal)