//@version=5
//Â© zyqxd
indicator("Stochastic Momentum with BBWP", shorttitle = "SM+BBWP", overlay=false)
import zyqxd/ColorRGB/2 as colorRGB

var c_spctrm = array.new_color(na)
if barstate.isfirst
    colorRGB.fill_124(c_spctrm)

i_k              = input.int ( 14,  title = "Percent K Length", group = 'Stoch')
i_d              = input.int ( 3,   title = "Percent D Length", group = 'Stoch')
i_bbwp_len       = input.int ( 55,  title = 'BBWP Length',      group = 'BBWP')
i_bbwp_lookback  = input.int ( 252, title = 'BBWP Lookback',    group = 'BBWP')
i_bbwp_ma_len    = input.int ( 5,   title = 'BBWP MA Length',   group = 'BBWP')

// --- Functions
f_bbwp ( bbwp_len, bbwp_lookback ) =>
    float basis = ta.sma(close, bbwp_len)
    float dev = ta.stdev(close, bbwp_len)
    _bbw = (( basis + dev ) - ( basis - dev )) / basis
    _bbwSum = 0
    for i = 1 to bbwp_lookback
        _bbwSum := _bbwSum + ( _bbw [i] > _bbw ? 0 : 1 )
    ( _bbwSum / bbwp_lookback ) * 100

f_clr_slct ( _percent, _array1 ) =>
    array.get(_array1, math.round(_percent))

// --- Calculations
ll      = ta.lowest(low, i_k)
hh      = ta.highest(high, i_k)
diff    = hh - ll
rdiff   = close - (hh + ll) / 2
bbwp    = f_bbwp(i_bbwp_len, i_bbwp_lookback)
bbwp_c  = f_clr_slct(bbwp, c_spctrm)
bbwp_ma = ta.sma(bbwp, i_bbwp_ma_len)

// Nested Moving Average for smoother curves
avgrel  = ta.ema(ta.ema(rdiff, i_d), i_d)
avgdiff = ta.ema(ta.ema(diff, i_d), i_d)

// smi calculations
smi = avgdiff != 0 ? ((avgrel / (avgdiff / 2) * 100) + 100) / 2 : 0
signal = ta.ema(smi, i_d)

// --- Plots
plot(smi,       title = "Stochastic Momentum Index", color = color.aqua,    linewidth = 2)
plot(signal,    title = "SMI Signal Line",           color = color.fuchsia, linewidth = 2)
plot(bbwp,      title = "BBWP",                      color = bbwp_c,          linewidth = 1)
plot(bbwp_ma,   title = "BBWP MA",                   color = color.white,   linewidth = 1)

h = hline(80, linestyle = hline.style_solid, color = color.new(color.white, 100))
l = hline(20, linestyle = hline.style_solid, color = color.new(color.white, 100))
hline(100,    linestyle = hline.style_solid)
hline(0,      linestyle = hline.style_solid)
hline(50,     linestyle = hline.style_solid, color = color.new(color.white, 80))
fill(l, h, color=color.new(color.purple, 90))