//@version=5
// This source code is subject to the terms of the Mozilla Public License 2.0 at
// https://mozilla.org/MPL/2.0/
// © zyqxd

strategy(title="Nadaraya-Watson (Kernel) Strategy",
     shorttitle="kernel-strat",
     overlay=true,
     precision = 2,
     pyramiding = 0,
     initial_capital = 10000,
     currency = currency.NONE,
     default_qty_type = strategy.percent_of_equity,
     default_qty_value = 100,
     commission_type = "percent",
     commission_value = 0.06)

var default_from = timestamp("1 Jan 2022 00:00 -0500")
var up_col = #39ff14
var dn_col = #ff1100
var chn_col = #ffffff

// --- Input: Kernel regression parameters
i_bandwidth  = input.float(8., 'Bandwidth (rec. 3-50)')
i_lookback   = input.int(500, 'Lookback window')
i_multiplier = input.float(3., 'Band width multiplier')

guassian(_src, _bandwidth, _lookback) =>
    float _current_weight = 0.
    float _cumulative_weight = 0.

    for i = 0 to _lookback
        w = math.exp(-(i * i) / (2 * _bandwidth * _bandwidth))

        _current_weight += _src[i] * w
        _cumulative_weight += w

    _current_weight / _cumulative_weight

kernel = guassian(close, i_bandwidth, i_lookback)
dir = (kernel > kernel[1] and kernel[1] < kernel[2])
        or (kernel < kernel[1] and kernel[1] > kernel[2]) ? 0 :
          kernel > kernel[1] ? 1 : -1

col = color.new(dir == 1 ? up_col : dir == -1 ? dn_col : chn_col, 0)

plot(kernel, color=col, style=plot.style_line, linewidth=2, title='Middle')

if dir == 1 and strategy.position_size == 0
    strategy.entry("long", strategy.long, comment="🔼🟢")
else if dir == -1 and strategy.position_size == 0
    strategy.entry("short", strategy.short, comment="🔽🔴")
else if dir == 0 and strategy.position_size != 0
    strategy.close_all(comment='🔽⚠️')
