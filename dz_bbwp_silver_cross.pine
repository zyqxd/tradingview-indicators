// © zyqxd

//@version=5
// NOTE(DZ):
// calc_on_every_tick => allow entry on every tick
// calc_on_order_fills => allow exit on same bar as entry
strategy("BBWP + Silver cross", overlay=true, max_bars_back=1000, calc_on_order_fills=true, calc_on_every_tick=true, default_qty_type=strategy.percent_of_equity, default_qty_value=10, initial_capital=10000)

// Input - calculations
i_current_tf    = input.bool     (true, title='Current timeframe', group='Calculations')
i_tf            = input.timeframe('D',  title='Timeframe', group='Calculations')
i_bbwpLen       = input.int      (13,   title='BBW Length', group='Calculations')
i_bbwpLookback  = input.int      (252,  title='BBWP Lookback', group='Calculations')
i_bbwpThreshold = input.int      (20,   title='BBWP Threshold', group='Calculations')

// Input - strategy
i_tp1           = input.float    (0.2, minval=0.0001, title='Take profit 1', group='Strategy')
i_tp2           = input.float    (0.8, minval=0.0001, title='Take profit 2', group='Strategy')
i_tp3           = input.float    (2,   minval=0.0001, title='Take profit 3', group='Strategy')
i_sl            = input.float    (0.2, minval=0.0001, title='SL', group='Strategy')

// Input - debug
i_debug         = input.bool     (false, title='Debug', group='Debug')

// Functions
f_tf_value ( value ) =>
    i_current_tf ? value : request.security(syminfo.tickerid, i_tf, value)

f_bbwp ( bbwpLen, bbwpLookback ) =>
    close_tf = f_tf_value(close)
    float basis = f_tf_value(ta.sma(close_tf, bbwpLen))
    float dev = f_tf_value(ta.stdev(close_tf, bbwpLen))
    _bbw = (( basis + dev ) - ( basis - dev )) / basis
    _bbwSum = 0
    for i = 1 to bbwpLookback
        _bbwSum := _bbwSum + ( _bbw [i] > _bbw ? 0 : 1 )
    ( _bbwSum / bbwpLookback ) * 100

// General
close_tf = f_tf_value(close)
// BBWP
bbwp = f_bbwp(i_bbwpLen, i_bbwpLookback)
bbwp_ma = f_tf_value(ta.sma(bbwp, 5))

// MA
ema_21 = f_tf_value(ta.ema(close_tf, 21))
ema_55 = f_tf_value(ta.ema(close_tf, 55))
plot(ema_21, color=color.yellow, title='EMA 21')
plot(ema_55, color=color.green, title='EMA 55')

// Strategy BBWP + MA
long_cond = ta.crossover(ema_21, ema_55)// and is_trending
short_cond = ta.crossunder(ema_21, ema_55)// and is_trending
is_trending = bbwp > bbwp_ma and bbwp > i_bbwpThreshold

// Debug
plot(i_debug ? strategy.position_avg_price : na, color=color.orange, title='Position Avg Price')
plot(i_debug ? strategy.position_size : na, color=color.orange, title='Position Size')
bgcolor(i_debug ? (is_trending ? color.new(color.red, 85) : color.new(color.green, 85)) : na)
plot(i_debug ? strategy.opentrades : na, color=color.orange, title='Open trades')

// Entries
// NOTE(DZ): Only allow entry if no other positions were closed in the same bar
// or if the last closed position was not in the same bar
allow_entry = barstate.isconfirmed and
                  strategy.position_size == 0 and
                  strategy.closedtrades == 0 or
                  (bar_index != strategy.closedtrades.exit_bar_index(strategy.closedtrades - 1))

if long_cond and allow_entry
    line.new(bar_index, close, bar_index, open, color=color.blue, extend=extend.both)
    strategy.entry("long", strategy.long, comment="🔼 🟢")

if short_cond and allow_entry
    line.new(bar_index, close, bar_index, open, color=color.purple, extend=extend.both)
    strategy.entry("short", strategy.short, comment="🔽 🟢")

// Risk management: 55 EMA
if strategy.position_size > 0 and close < ema_55
    strategy.close_all(comment="🛑 55")

if strategy.position_size < 0 and close > ema_55
    strategy.close_all(comment="🛑 55")

// Risk management: Entry bar
bars_since_entry = bar_index - strategy.opentrades.entry_bar_index(0)
if strategy.position_size > 0 and close < low[bars_since_entry]
    strategy.close_all(comment="🛑 entry bar")

if strategy.position_size < 0 and close > high[bars_since_entry]
    strategy.close_all(comment="🛑 entry bar")

// Exits
// atr Tp
// change downside tp targets
// close all if close under 55

// if strategy.position_size > 0
//     limit1 = strategy.position_avg_price * 1.2//(1 + i_tp1)
//     limit2 = strategy.position_avg_price * 1.8//(1 + i_tp2)
//     limit3 = strategy.position_avg_price * 2  //(1 + i_tp3)
//     stop = strategy.position_avg_price * 0.8 //(1 - i_sl)
//     strategy.exit("1", "long", qty_percent=40, limit=limit1, stop=stop, comment_profit="🔼 ⭐️", comment_loss="🔼 🛑")
//     strategy.exit("2", "long", qty_percent=30, limit=limit2, stop=stop, comment_profit="🔼 ⭐⭐", comment_loss="🔼 🛑")
//     strategy.exit("3", "long", qty_percent=30, limit=limit3, stop=stop, comment_profit="🔼 ⭐️⭐⭐️️", comment_loss="🔼 🛑")

// if strategy.position_size < 0
//     limit1 = strategy.position_avg_price * 0.9 //(1 - i_tp1)
//     limit2 = strategy.position_avg_price * 0.8 //(1 - i_tp2)
//     limit3 = strategy.position_avg_price * 0.6 //(1 - i_tp3)
//     stop = strategy.position_avg_price * 1.1 //(1 + i_sl)
//     strategy.exit("1", "short", qty_percent=40, limit=limit1, stop=stop, comment_profit="🔽 ⭐️", comment_loss="🔽 🛑")
//     strategy.exit("2", "short", qty_percent=30, limit=limit2, stop=stop, comment_profit="🔽 ⭐⭐", comment_loss="🔽 🛑")
//     strategy.exit("3", "short", qty_percent=30, limit=limit3, stop=stop, comment_profit="🔽 ⭐️⭐⭐️️", comment_loss="🔽 🛑")
