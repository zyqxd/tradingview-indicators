// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© itsdeezy
// derived the screener logic from @ KivancOzbilgic
//@version=4

study("Supertrend", shorttitle="DzSt", overlay=true)

// Supertrend
src          = input(close,              title="Source",                group="Supertrend")
periods      = input(14,                 title="ATR period",            group="Supertrend", type=input.integer)
multiplier   = input(3.0,                title="ATR multiplier",        group="Supertrend", type=input.float, step=0.1)
fastTf       = input("15",                title="Fast Timeframe",       group="Supertrend", type=input.resolution)
slowTf       = input("60",               title="Slow Timeframe",        group="Supertrend", type=input.resolution)
allFast      = input(false,              title="Show all fast signals", group="Supertrend")

// Screener
showscr      = input(true,               title="Show Screener",         group="Screeners")
posX_scr     = input(20,                 title="X-axis Position",       group="Screeners")
posY_scr     = input(1,                  title="Y-axis Position",       group="Screeners")

// Screener tickers
ticker01     = input('BTC1!',            title="Ticker 1",              group="Screeners")
ticker02     = input('ETH1!',            title="Ticker 2",              group="Screeners")
ticker03     = input('BYBIT:BTCUSDT.P',  title="Ticker 3",              group="Screeners")
ticker04     = input('BYBIT:ETHUSDT.P',  title="Ticker 4",              group="Screeners")
ticker05     = input('BYBIT:LINKUSDT.P', title="Ticker 5",              group="Screeners")
ticker06     = input('BYBIT:SOLUSDT.P',  title="Ticker 6",              group="Screeners")
ticker07     = input('BYBIT:ADAUSDT',    title="Ticker 7",              group="Screeners")
ticker08     = input('BYBIT:DOTUSDT',    title="Ticker 8",              group="Screeners")
ticker09     = input('',                 title="Ticker 9",              group="Screeners")
ticker10     = input('',                 title="Ticker 10",             group="Screeners")

trendInfo(periods, multipler, tf) =>
    atr   =  security(syminfo.tickerid, tf, atr(periods))

    up    =  src - (multiplier * atr)
    up1   =  nz(up[1], up)
    up    := close[1] > up1 ? max(up, up1) : up

    dn    =  src + (multiplier * atr)
    dn1   =  nz(dn[1], dn)
    dn    := close[1] < dn1 ? min(dn, dn1) : dn

    trend =  1
    trend := nz(trend[1], trend)
    trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend

    signal = trend != trend[1]

    [up, dn, trend, signal]

[upA, dnA, trendA, signalA] = trendInfo(periods, multiplier, slowTf)

pa = plot(ohlc4, transp = 100)

aUpPlot = plot(trendA == 1 ? upA : na, style = plot.style_linebr, color = color.green)
aDnPlot = plot(trendA == 1 ? na : dnA, style = plot.style_linebr, color = color.red)
fill(pa, aUpPlot, color = trendA == 1 ? color.green : color.white)
fill(pa, aDnPlot, color = trendA == -1 ? color.red : color.white)

[upB, dnB, trendB, signalB] = trendInfo(periods, multiplier, fastTf)

bUpPlot = plot(trendB == 1 ? upB : na, style = plot.style_linebr, color = color.teal)
bDnPlot = plot(trendB == 1 ? na : dnB, style = plot.style_linebr, color = color.purple)
fill(pa, bUpPlot, color = trendB == 1 ? color.teal : color.white)
fill(pa, bDnPlot, color = trendB == -1 ? color.purple : color.white)

plotshape(signalB and trendB == 1 and (allFast or trendA == 1) ? upB : na,
          text = "Buy",
          location = location.absolute,
          style = shape.labelup,
          size = size.tiny,
          color = color.teal,
          textcolor = color.white)

plotshape(signalB and trendB == -1 and (allFast or trendA == -1) ? dnB : na,
          text = "Sell",
          location = location.absolute,
          style = shape.labeldown,
          size = size.tiny,
          color = color.purple,
          textcolor = color.white)

col = color.blue

Supertrend(multiplier, periods) =>
    atr = atr(periods)
    Up=hl2-(multiplier * atr)
    Dn=hl2+(multiplier * atr)

    TrendUp = 0.0
    TrendUp := close[1]>TrendUp[1] ? max(Up,TrendUp[1]) : Up
    TrendDown = 0.0
    TrendDown := close[1]<TrendDown[1]? min(Dn,TrendDown[1]) : Dn
    Trend = 0.0
    Trend := close > TrendDown[1] ? 1: close< TrendUp[1]? -1: nz(Trend[1],1)
    Tsl = Trend==1? TrendUp: TrendDown

    S_Buy = Trend == 1 ? 1 : 0
    S_Sell = Trend != 1 ? 1 : 0

    [Trend, Tsl]

[Trend, Tsl] = Supertrend(multiplier, periods)
TrendReversal = Trend != Trend[1]

[t01, s01] = security(ticker01, timeframe.period, Supertrend(multiplier, periods))
[t02, s02] = security(ticker02, timeframe.period, Supertrend(multiplier, periods))
[t03, s03] = security(ticker03, timeframe.period, Supertrend(multiplier, periods))
[t04, s04] = security(ticker04, timeframe.period, Supertrend(multiplier, periods))
[t05, s05] = security(ticker05, timeframe.period, Supertrend(multiplier, periods))
[t06, s06] = security(ticker06, timeframe.period, Supertrend(multiplier, periods))
[t07, s07] = security(ticker07, timeframe.period, Supertrend(multiplier, periods))
[t08, s08] = security(ticker08, timeframe.period, Supertrend(multiplier, periods))
[t09, s09] = security(ticker09, timeframe.period, Supertrend(multiplier, periods))
[t10, s10] = security(ticker10, timeframe.period, Supertrend(multiplier, periods))

tr01 = t01 != t01[1], up01 = t01 == 1, dn01 = t01 == -1
tr02 = t02 != t02[1], up02 = t02 == 1, dn02 = t02 == -1
tr03 = t03 != t03[1], up03 = t03 == 1, dn03 = t03 == -1
tr04 = t04 != t04[1], up04 = t04 == 1, dn04 = t04 == -1
tr05 = t05 != t05[1], up05 = t05 == 1, dn05 = t05 == -1
tr06 = t06 != t06[1], up06 = t06 == 1, dn06 = t06 == -1
tr07 = t07 != t07[1], up07 = t07 == 1, dn07 = t07 == -1
tr08 = t08 != t08[1], up08 = t08 == 1, dn08 = t08 == -1
tr09 = t09 != t09[1], up09 = t09 == 1, dn09 = t09 == -1
tr10 = t10 != t10[1], up10 = t10 == 1, dn10 = t10 == -1

pot_label = 'Potential Reversal: \n'
pot_label := tr01     ? pot_label + ticker01 + '\n'  : pot_label
pot_label := tr02     ? pot_label + ticker02 + '\n'  : pot_label
pot_label := tr03     ? pot_label + ticker03 + '\n'  : pot_label
pot_label := tr04     ? pot_label + ticker04 + '\n'  : pot_label
pot_label := tr05     ? pot_label + ticker05 + '\n'  : pot_label
pot_label := tr06     ? pot_label + ticker06 + '\n'  : pot_label
pot_label := tr07     ? pot_label + ticker07 + '\n'  : pot_label
pot_label := tr08     ? pot_label + ticker08 + '\n'  : pot_label
pot_label := tr09     ? pot_label + ticker09 + '\n'  : pot_label
pot_label := tr10     ? pot_label + ticker10 + '\n'  : pot_label

scr_label = 'Confirmed Reversal: \n'
scr_label := tr01[1]  ? scr_label + ticker01 + '\n'  : scr_label
scr_label := tr02[1]  ? scr_label + ticker02 + '\n'  : scr_label
scr_label := tr03[1]  ? scr_label + ticker03 + '\n'  : scr_label
scr_label := tr04[1]  ? scr_label + ticker04 + '\n'  : scr_label
scr_label := tr05[1]  ? scr_label + ticker05 + '\n'  : scr_label
scr_label := tr06[1]  ? scr_label + ticker06 + '\n'  : scr_label
scr_label := tr07[1]  ? scr_label + ticker07 + '\n'  : scr_label
scr_label := tr08[1]  ? scr_label + ticker08 + '\n'  : scr_label
scr_label := tr09[1]  ? scr_label + ticker09 + '\n'  : scr_label
scr_label := tr10[1]  ? scr_label + ticker10 + '\n'  : scr_label

f_colorscr (_valscr ) =>
     _valscr  ? #00000000 : na

f_printscr (_txtscr ) =>
     var _lblscr  = label(na),
     label.delete(_lblscr ),
     _lblscr  := label.new(
     time + (time-time[1])*posX_scr ,
     ohlc4[posY_scr],
     _txtscr ,
     xloc.bar_time,
     yloc.price,
     f_colorscr (  showscr ),
     textcolor =  showscr ? col : na,
     size = size.normal,
     style=label.style_label_center
     )
f_printscr ( scr_label + '\n' + pot_label)

st_security(_symbol, _res, _src) => security(_symbol, _res, _src[barstate.isrealtime ? 1 : 0])
ST_Trend = st_security(syminfo.tickerid, timeframe.period, Trend)
ST_Tsl = st_security(syminfo.tickerid, timeframe.period, Tsl)